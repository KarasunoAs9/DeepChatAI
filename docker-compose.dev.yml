version: '3.8'

services:
  # База данных PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: deepchatai_postgres_dev
    environment:
      POSTGRES_DB: deepchatai_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend сервис для разработки
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: deepchatai_backend_dev
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/deepchatai_dev
      SECRET_KEY: dev-secret-key
      ALGORITHM: HS256
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  # Frontend сервис для разработки
  frontend:
    image: node:18-alpine
    container_name: deepchatai_frontend_dev
    working_dir: /app
    environment:
      VITE_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    restart: unless-stopped

  # Redis для кеширования
  redis:
    image: redis:7-alpine
    container_name: deepchatai_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  default:
    name: deepchatai_dev_network
